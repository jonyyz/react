// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Users View should render error 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <Memo()
            text="Error retrieving users"
          >
            <div
              className="makeStyles-container-18"
            >
              <ForwardRef
                color="error"
                fontSize="large"
              >
                <WithStyles(ForwardRef(SvgIcon))
                  color="error"
                  fontSize="large"
                >
                  <ForwardRef(SvgIcon)
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction",
                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                        "colorError": "MuiSvgIcon-colorError",
                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                        "root": "MuiSvgIcon-root",
                      }
                    }
                    color="error"
                    fontSize="large"
                  >
                    <svg
                      aria-hidden="true"
                      className="MuiSvgIcon-root MuiSvgIcon-colorError MuiSvgIcon-fontSizeLarge"
                      focusable="false"
                      role="presentation"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </WithStyles(ForwardRef(SvgIcon))>
              </ForwardRef>
              <WithStyles(ForwardRef(Typography))
                className="makeStyles-errorMessage-19"
                variant="body1"
              >
                <ForwardRef(Typography)
                  className="makeStyles-errorMessage-19"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  theme={
                    Object {
                      "breakpoints": Object {
                        "between": [Function],
                        "down": [Function],
                        "keys": Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ],
                        "only": [Function],
                        "up": [Function],
                        "values": Object {
                          "lg": 1280,
                          "md": 960,
                          "sm": 600,
                          "xl": 1920,
                          "xs": 0,
                        },
                        "width": [Function],
                      },
                      "direction": "ltr",
                      "mixins": Object {
                        "gutters": [Function],
                        "toolbar": Object {
                          "@media (min-width:0px) and (orientation: landscape)": Object {
                            "minHeight": 48,
                          },
                          "@media (min-width:600px)": Object {
                            "minHeight": 64,
                          },
                          "minHeight": 56,
                        },
                      },
                      "overrides": Object {},
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "augmentColor": [Function],
                        "background": Object {
                          "default": "#fafafa",
                          "paper": "#fff",
                        },
                        "common": Object {
                          "black": "#000",
                          "white": "#fff",
                        },
                        "contrastThreshold": 3,
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "getContrastText": [Function],
                        "grey": Object {
                          "100": "#f5f5f5",
                          "200": "#eeeeee",
                          "300": "#e0e0e0",
                          "400": "#bdbdbd",
                          "50": "#fafafa",
                          "500": "#9e9e9e",
                          "600": "#757575",
                          "700": "#616161",
                          "800": "#424242",
                          "900": "#212121",
                          "A100": "#d5d5d5",
                          "A200": "#aaaaaa",
                          "A400": "#303030",
                          "A700": "#616161",
                        },
                        "primary": Object {
                          "100": "#cfd8dc",
                          "200": "#b0bec5",
                          "300": "#90a4ae",
                          "400": "#78909c",
                          "50": "#eceff1",
                          "500": "#607d8b",
                          "600": "#546e7a",
                          "700": "#455a64",
                          "800": "#37474f",
                          "900": "#263238",
                          "A100": "#cfd8dc",
                          "A200": "#b0bec5",
                          "A400": "#78909c",
                          "A700": "#455a64",
                          "contrastText": "#fff",
                          "dark": "#455a64",
                          "light": "#90a4ae",
                          "main": "#607d8b",
                        },
                        "secondary": Object {
                          "100": "#dcedc8",
                          "200": "#c5e1a5",
                          "300": "#aed581",
                          "400": "#9ccc65",
                          "50": "#f1f8e9",
                          "500": "#8bc34a",
                          "600": "#7cb342",
                          "700": "#689f38",
                          "800": "#558b2f",
                          "900": "#33691e",
                          "A100": "#ccff90",
                          "A200": "#b2ff59",
                          "A400": "#76ff03",
                          "A700": "#64dd17",
                          "contrastText": "rgba(0, 0, 0, 0.87)",
                          "dark": "#64dd17",
                          "light": "#b2ff59",
                          "main": "#76ff03",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                        "tonalOffset": 0.2,
                        "type": "light",
                      },
                      "props": Object {},
                      "shadows": Array [
                        "none",
                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                      ],
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": [Function],
                      "transitions": Object {
                        "create": [Function],
                        "duration": Object {
                          "complex": 375,
                          "enteringScreen": 225,
                          "leavingScreen": 195,
                          "short": 250,
                          "shorter": 200,
                          "shortest": 150,
                          "standard": 300,
                        },
                        "easing": Object {
                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                        },
                        "getAutoHeightDuration": [Function],
                      },
                      "typography": Object {
                        "body1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.5,
                        },
                        "body2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.01071em",
                          "lineHeight": 1.43,
                        },
                        "button": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.02857em",
                          "lineHeight": 1.75,
                          "textTransform": "none",
                        },
                        "caption": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.03333em",
                          "lineHeight": 1.66,
                        },
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": 14,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "6rem",
                          "fontWeight": 300,
                          "letterSpacing": "-0.01562em",
                          "lineHeight": 1,
                        },
                        "h2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3.75rem",
                          "fontWeight": 300,
                          "letterSpacing": "-0.00833em",
                          "lineHeight": 1,
                        },
                        "h3": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3rem",
                          "fontWeight": 400,
                          "letterSpacing": "0em",
                          "lineHeight": 1.04,
                        },
                        "h4": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "2.125rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00735em",
                          "lineHeight": 1.17,
                        },
                        "h5": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.5rem",
                          "fontWeight": 400,
                          "letterSpacing": "0em",
                          "lineHeight": 1.33,
                        },
                        "h6": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.25rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.0075em",
                          "lineHeight": 1.6,
                        },
                        "htmlFontSize": 16,
                        "overline": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.08333em",
                          "lineHeight": 2.66,
                          "textTransform": "uppercase",
                        },
                        "pxToRem": [Function],
                        "round": [Function],
                        "subtitle1": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.75,
                        },
                        "subtitle2": Object {
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "letterSpacing": "0.00714em",
                          "lineHeight": 1.57,
                        },
                      },
                      "zIndex": Object {
                        "appBar": 1100,
                        "drawer": 1200,
                        "mobileStepper": 1000,
                        "modal": 1300,
                        "snackbar": 1400,
                        "tooltip": 1500,
                      },
                    }
                  }
                  variant="body1"
                >
                  <p
                    className="MuiTypography-root makeStyles-errorMessage-19 MuiTypography-body1"
                  >
                    Error retrieving users
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </div>
          </Memo()>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render filtered users 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <ScrollableContainer>
            <div
              className="makeStyles-scrollable-59"
            >
              <WithStyles(ForwardRef(Table))
                className="makeStyles-table-1"
              >
                <ForwardRef(Table)
                  className="makeStyles-table-1"
                  classes={
                    Object {
                      "root": "MuiTable-root",
                    }
                  }
                >
                  <table
                    className="MuiTable-root makeStyles-table-1"
                  >
                    <WithStyles(ForwardRef(TableHead))>
                      <ForwardRef(TableHead)
                        classes={
                          Object {
                            "root": "MuiTableHead-root",
                          }
                        }
                      >
                        <thead
                          className="MuiTableHead-root"
                        >
                          <WithStyles(ForwardRef(TableRow))>
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root MuiTableRow-head"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      <div
                                        className="makeStyles-header-2"
                                      >
                                        <div
                                          className="makeStyles-headerSort-3"
                                          id="sortCompanyName"
                                          onClick={[Function]}
                                        >
                                          Company Name 
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 10l5 5 5-5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </div>
                                        <WithStyles(ForwardRef(TextField))
                                          InputProps={
                                            Object {
                                              "startAdornment": <ForwardRef(WithStyles)
                                                position="start"
                                              >
                                                <Memo />
                                              </ForwardRef(WithStyles)>,
                                            }
                                          }
                                          className="makeStyles-search-4"
                                          id="search"
                                          onChange={[Function]}
                                          placeholder="Search"
                                        >
                                          <ForwardRef(TextField)
                                            InputProps={
                                              Object {
                                                "startAdornment": <ForwardRef(WithStyles)
                                                  position="start"
                                                >
                                                  <Memo />
                                                </ForwardRef(WithStyles)>,
                                              }
                                            }
                                            className="makeStyles-search-4"
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            id="search"
                                            onChange={[Function]}
                                            placeholder="Search"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root makeStyles-search-4"
                                              required={false}
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root makeStyles-search-4"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                required={false}
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root makeStyles-search-4"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                    startAdornment={
                                                      <ForwardRef(WithStyles)
                                                        position="start"
                                                      >
                                                        <Memo />
                                                      </ForwardRef(WithStyles)>
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      id="search"
                                                      onChange={[Function]}
                                                      placeholder="Search"
                                                      startAdornment={
                                                        <ForwardRef(WithStyles)
                                                          position="start"
                                                        >
                                                          <Memo />
                                                        </ForwardRef(WithStyles)>
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="search"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Search"
                                                        startAdornment={
                                                          <ForwardRef(WithStyles)
                                                            position="start"
                                                          >
                                                            <Memo />
                                                          </ForwardRef(WithStyles)>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputSelect": "MuiInputBase-inputSelect",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          id="search"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Search"
                                                          startAdornment={
                                                            <ForwardRef(WithStyles)
                                                              position="start"
                                                            >
                                                              <Memo />
                                                            </ForwardRef(WithStyles)>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                                              position="start"
                                                            >
                                                              <WithFormControlContext(ForwardRef(InputAdornment))
                                                                classes={
                                                                  Object {
                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                    "filled": "MuiInputAdornment-filled",
                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                    "root": "MuiInputAdornment-root",
                                                                  }
                                                                }
                                                                position="start"
                                                              >
                                                                <ForwardRef(InputAdornment)
                                                                  classes={
                                                                    Object {
                                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                      "filled": "MuiInputAdornment-filled",
                                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                                      "root": "MuiInputAdornment-root",
                                                                    }
                                                                  }
                                                                  muiFormControl={
                                                                    Object {
                                                                      "adornedStart": true,
                                                                      "disabled": false,
                                                                      "error": false,
                                                                      "filled": false,
                                                                      "focused": false,
                                                                      "margin": "none",
                                                                      "onBlur": [Function],
                                                                      "onEmpty": [Function],
                                                                      "onFilled": [Function],
                                                                      "onFocus": [Function],
                                                                      "required": false,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  position="start"
                                                                >
                                                                  <div
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            role="presentation"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ForwardRef(InputAdornment)>
                                                              </WithFormControlContext(ForwardRef(InputAdornment))>
                                                            </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              id="search"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Search"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Name
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Website
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      City
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </thead>
                      </ForwardRef(TableHead)>
                    </WithStyles(ForwardRef(TableHead))>
                    <WithStyles(ForwardRef(TableBody))>
                      <ForwardRef(TableBody)
                        classes={
                          Object {
                            "root": "MuiTableBody-root",
                          }
                        }
                      >
                        <tbody
                          className="MuiTableBody-root"
                        />
                      </ForwardRef(TableBody)>
                    </WithStyles(ForwardRef(TableBody))>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollableContainer>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render progress 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <Progress>
            <div
              className="makeStyles-container-5"
            >
              <WithStyles(ForwardRef(CircularProgress))
                size={50}
                thickness={6}
              >
                <ForwardRef(CircularProgress)
                  classes={
                    Object {
                      "circle": "MuiCircularProgress-circle",
                      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                      "circleStatic": "MuiCircularProgress-circleStatic",
                      "colorPrimary": "MuiCircularProgress-colorPrimary",
                      "colorSecondary": "MuiCircularProgress-colorSecondary",
                      "indeterminate": "MuiCircularProgress-indeterminate",
                      "root": "MuiCircularProgress-root",
                      "static": "MuiCircularProgress-static",
                      "svg": "MuiCircularProgress-svg",
                    }
                  }
                  size={50}
                  thickness={6}
                >
                  <div
                    className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style={
                      Object {
                        "height": 50,
                        "width": 50,
                      }
                    }
                  >
                    <svg
                      className="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx={44}
                        cy={44}
                        fill="none"
                        r={19}
                        strokeWidth={6}
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </ForwardRef(CircularProgress)>
              </WithStyles(ForwardRef(CircularProgress))>
            </div>
          </Progress>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render unfiltered users 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <ScrollableContainer>
            <div
              className="makeStyles-scrollable-59"
            >
              <WithStyles(ForwardRef(Table))
                className="makeStyles-table-1"
              >
                <ForwardRef(Table)
                  className="makeStyles-table-1"
                  classes={
                    Object {
                      "root": "MuiTable-root",
                    }
                  }
                >
                  <table
                    className="MuiTable-root makeStyles-table-1"
                  >
                    <WithStyles(ForwardRef(TableHead))>
                      <ForwardRef(TableHead)
                        classes={
                          Object {
                            "root": "MuiTableHead-root",
                          }
                        }
                      >
                        <thead
                          className="MuiTableHead-root"
                        >
                          <WithStyles(ForwardRef(TableRow))>
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root MuiTableRow-head"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      <div
                                        className="makeStyles-header-2"
                                      >
                                        <div
                                          className="makeStyles-headerSort-3"
                                          id="sortCompanyName"
                                          onClick={[Function]}
                                        >
                                          Company Name 
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 10l5 5 5-5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </div>
                                        <WithStyles(ForwardRef(TextField))
                                          InputProps={
                                            Object {
                                              "startAdornment": <ForwardRef(WithStyles)
                                                position="start"
                                              >
                                                <Memo />
                                              </ForwardRef(WithStyles)>,
                                            }
                                          }
                                          className="makeStyles-search-4"
                                          id="search"
                                          onChange={[Function]}
                                          placeholder="Search"
                                        >
                                          <ForwardRef(TextField)
                                            InputProps={
                                              Object {
                                                "startAdornment": <ForwardRef(WithStyles)
                                                  position="start"
                                                >
                                                  <Memo />
                                                </ForwardRef(WithStyles)>,
                                              }
                                            }
                                            className="makeStyles-search-4"
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            id="search"
                                            onChange={[Function]}
                                            placeholder="Search"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root makeStyles-search-4"
                                              required={false}
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root makeStyles-search-4"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                required={false}
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root makeStyles-search-4"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                    startAdornment={
                                                      <ForwardRef(WithStyles)
                                                        position="start"
                                                      >
                                                        <Memo />
                                                      </ForwardRef(WithStyles)>
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      id="search"
                                                      onChange={[Function]}
                                                      placeholder="Search"
                                                      startAdornment={
                                                        <ForwardRef(WithStyles)
                                                          position="start"
                                                        >
                                                          <Memo />
                                                        </ForwardRef(WithStyles)>
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="search"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Search"
                                                        startAdornment={
                                                          <ForwardRef(WithStyles)
                                                            position="start"
                                                          >
                                                            <Memo />
                                                          </ForwardRef(WithStyles)>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputSelect": "MuiInputBase-inputSelect",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          id="search"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Search"
                                                          startAdornment={
                                                            <ForwardRef(WithStyles)
                                                              position="start"
                                                            >
                                                              <Memo />
                                                            </ForwardRef(WithStyles)>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                                              position="start"
                                                            >
                                                              <WithFormControlContext(ForwardRef(InputAdornment))
                                                                classes={
                                                                  Object {
                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                    "filled": "MuiInputAdornment-filled",
                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                    "root": "MuiInputAdornment-root",
                                                                  }
                                                                }
                                                                position="start"
                                                              >
                                                                <ForwardRef(InputAdornment)
                                                                  classes={
                                                                    Object {
                                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                      "filled": "MuiInputAdornment-filled",
                                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                                      "root": "MuiInputAdornment-root",
                                                                    }
                                                                  }
                                                                  muiFormControl={
                                                                    Object {
                                                                      "adornedStart": true,
                                                                      "disabled": false,
                                                                      "error": false,
                                                                      "filled": false,
                                                                      "focused": false,
                                                                      "margin": "none",
                                                                      "onBlur": [Function],
                                                                      "onEmpty": [Function],
                                                                      "onFilled": [Function],
                                                                      "onFocus": [Function],
                                                                      "required": false,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  position="start"
                                                                >
                                                                  <div
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            role="presentation"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ForwardRef(InputAdornment)>
                                                              </WithFormControlContext(ForwardRef(InputAdornment))>
                                                            </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              id="search"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Search"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Name
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Website
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      City
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </thead>
                      </ForwardRef(TableHead)>
                    </WithStyles(ForwardRef(TableHead))>
                    <WithStyles(ForwardRef(TableBody))>
                      <ForwardRef(TableBody)
                        classes={
                          Object {
                            "root": "MuiTableBody-root",
                          }
                        }
                      >
                        <tbody
                          className="MuiTableBody-root"
                        >
                          <WithStyles(ForwardRef(TableRow))
                            key="42"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Mel Blanc
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </tbody>
                      </ForwardRef(TableBody)>
                    </WithStyles(ForwardRef(TableBody))>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollableContainer>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render users 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <ScrollableContainer>
            <div
              className="makeStyles-scrollable-59"
            >
              <WithStyles(ForwardRef(Table))
                className="makeStyles-table-1"
              >
                <ForwardRef(Table)
                  className="makeStyles-table-1"
                  classes={
                    Object {
                      "root": "MuiTable-root",
                    }
                  }
                >
                  <table
                    className="MuiTable-root makeStyles-table-1"
                  >
                    <WithStyles(ForwardRef(TableHead))>
                      <ForwardRef(TableHead)
                        classes={
                          Object {
                            "root": "MuiTableHead-root",
                          }
                        }
                      >
                        <thead
                          className="MuiTableHead-root"
                        >
                          <WithStyles(ForwardRef(TableRow))>
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root MuiTableRow-head"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      <div
                                        className="makeStyles-header-2"
                                      >
                                        <div
                                          className="makeStyles-headerSort-3"
                                          id="sortCompanyName"
                                          onClick={[Function]}
                                        >
                                          Company Name 
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 10l5 5 5-5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </div>
                                        <WithStyles(ForwardRef(TextField))
                                          InputProps={
                                            Object {
                                              "startAdornment": <ForwardRef(WithStyles)
                                                position="start"
                                              >
                                                <Memo />
                                              </ForwardRef(WithStyles)>,
                                            }
                                          }
                                          className="makeStyles-search-4"
                                          id="search"
                                          onChange={[Function]}
                                          placeholder="Search"
                                        >
                                          <ForwardRef(TextField)
                                            InputProps={
                                              Object {
                                                "startAdornment": <ForwardRef(WithStyles)
                                                  position="start"
                                                >
                                                  <Memo />
                                                </ForwardRef(WithStyles)>,
                                              }
                                            }
                                            className="makeStyles-search-4"
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            id="search"
                                            onChange={[Function]}
                                            placeholder="Search"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root makeStyles-search-4"
                                              required={false}
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root makeStyles-search-4"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                required={false}
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root makeStyles-search-4"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                    startAdornment={
                                                      <ForwardRef(WithStyles)
                                                        position="start"
                                                      >
                                                        <Memo />
                                                      </ForwardRef(WithStyles)>
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      id="search"
                                                      onChange={[Function]}
                                                      placeholder="Search"
                                                      startAdornment={
                                                        <ForwardRef(WithStyles)
                                                          position="start"
                                                        >
                                                          <Memo />
                                                        </ForwardRef(WithStyles)>
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="search"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Search"
                                                        startAdornment={
                                                          <ForwardRef(WithStyles)
                                                            position="start"
                                                          >
                                                            <Memo />
                                                          </ForwardRef(WithStyles)>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputSelect": "MuiInputBase-inputSelect",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          id="search"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Search"
                                                          startAdornment={
                                                            <ForwardRef(WithStyles)
                                                              position="start"
                                                            >
                                                              <Memo />
                                                            </ForwardRef(WithStyles)>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                                              position="start"
                                                            >
                                                              <WithFormControlContext(ForwardRef(InputAdornment))
                                                                classes={
                                                                  Object {
                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                    "filled": "MuiInputAdornment-filled",
                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                    "root": "MuiInputAdornment-root",
                                                                  }
                                                                }
                                                                position="start"
                                                              >
                                                                <ForwardRef(InputAdornment)
                                                                  classes={
                                                                    Object {
                                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                      "filled": "MuiInputAdornment-filled",
                                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                                      "root": "MuiInputAdornment-root",
                                                                    }
                                                                  }
                                                                  muiFormControl={
                                                                    Object {
                                                                      "adornedStart": true,
                                                                      "disabled": false,
                                                                      "error": false,
                                                                      "filled": false,
                                                                      "focused": false,
                                                                      "margin": "none",
                                                                      "onBlur": [Function],
                                                                      "onEmpty": [Function],
                                                                      "onFilled": [Function],
                                                                      "onFocus": [Function],
                                                                      "required": false,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  position="start"
                                                                >
                                                                  <div
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            role="presentation"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ForwardRef(InputAdornment)>
                                                              </WithFormControlContext(ForwardRef(InputAdornment))>
                                                            </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              id="search"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Search"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Name
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Website
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      City
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </thead>
                      </ForwardRef(TableHead)>
                    </WithStyles(ForwardRef(TableHead))>
                    <WithStyles(ForwardRef(TableBody))>
                      <ForwardRef(TableBody)
                        classes={
                          Object {
                            "root": "MuiTableBody-root",
                          }
                        }
                      >
                        <tbody
                          className="MuiTableBody-root"
                        >
                          <WithStyles(ForwardRef(TableRow))
                            key="42"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Mel Blanc
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </tbody>
                      </ForwardRef(TableBody)>
                    </WithStyles(ForwardRef(TableBody))>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollableContainer>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render users sorted by company name ascending 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <ScrollableContainer>
            <div
              className="makeStyles-scrollable-59"
            >
              <WithStyles(ForwardRef(Table))
                className="makeStyles-table-1"
              >
                <ForwardRef(Table)
                  className="makeStyles-table-1"
                  classes={
                    Object {
                      "root": "MuiTable-root",
                    }
                  }
                >
                  <table
                    className="MuiTable-root makeStyles-table-1"
                  >
                    <WithStyles(ForwardRef(TableHead))>
                      <ForwardRef(TableHead)
                        classes={
                          Object {
                            "root": "MuiTableHead-root",
                          }
                        }
                      >
                        <thead
                          className="MuiTableHead-root"
                        >
                          <WithStyles(ForwardRef(TableRow))>
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root MuiTableRow-head"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      <div
                                        className="makeStyles-header-2"
                                      >
                                        <div
                                          className="makeStyles-headerSort-3"
                                          id="sortCompanyName"
                                          onClick={[Function]}
                                        >
                                          Company Name 
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 10l5 5 5-5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </div>
                                        <WithStyles(ForwardRef(TextField))
                                          InputProps={
                                            Object {
                                              "startAdornment": <ForwardRef(WithStyles)
                                                position="start"
                                              >
                                                <Memo />
                                              </ForwardRef(WithStyles)>,
                                            }
                                          }
                                          className="makeStyles-search-4"
                                          id="search"
                                          onChange={[Function]}
                                          placeholder="Search"
                                        >
                                          <ForwardRef(TextField)
                                            InputProps={
                                              Object {
                                                "startAdornment": <ForwardRef(WithStyles)
                                                  position="start"
                                                >
                                                  <Memo />
                                                </ForwardRef(WithStyles)>,
                                              }
                                            }
                                            className="makeStyles-search-4"
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            id="search"
                                            onChange={[Function]}
                                            placeholder="Search"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root makeStyles-search-4"
                                              required={false}
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root makeStyles-search-4"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                required={false}
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root makeStyles-search-4"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                    startAdornment={
                                                      <ForwardRef(WithStyles)
                                                        position="start"
                                                      >
                                                        <Memo />
                                                      </ForwardRef(WithStyles)>
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      id="search"
                                                      onChange={[Function]}
                                                      placeholder="Search"
                                                      startAdornment={
                                                        <ForwardRef(WithStyles)
                                                          position="start"
                                                        >
                                                          <Memo />
                                                        </ForwardRef(WithStyles)>
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="search"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Search"
                                                        startAdornment={
                                                          <ForwardRef(WithStyles)
                                                            position="start"
                                                          >
                                                            <Memo />
                                                          </ForwardRef(WithStyles)>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputSelect": "MuiInputBase-inputSelect",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          id="search"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Search"
                                                          startAdornment={
                                                            <ForwardRef(WithStyles)
                                                              position="start"
                                                            >
                                                              <Memo />
                                                            </ForwardRef(WithStyles)>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                                              position="start"
                                                            >
                                                              <WithFormControlContext(ForwardRef(InputAdornment))
                                                                classes={
                                                                  Object {
                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                    "filled": "MuiInputAdornment-filled",
                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                    "root": "MuiInputAdornment-root",
                                                                  }
                                                                }
                                                                position="start"
                                                              >
                                                                <ForwardRef(InputAdornment)
                                                                  classes={
                                                                    Object {
                                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                      "filled": "MuiInputAdornment-filled",
                                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                                      "root": "MuiInputAdornment-root",
                                                                    }
                                                                  }
                                                                  muiFormControl={
                                                                    Object {
                                                                      "adornedStart": true,
                                                                      "disabled": false,
                                                                      "error": false,
                                                                      "filled": false,
                                                                      "focused": false,
                                                                      "margin": "none",
                                                                      "onBlur": [Function],
                                                                      "onEmpty": [Function],
                                                                      "onFilled": [Function],
                                                                      "onFocus": [Function],
                                                                      "required": false,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  position="start"
                                                                >
                                                                  <div
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            role="presentation"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ForwardRef(InputAdornment)>
                                                              </WithFormControlContext(ForwardRef(InputAdornment))>
                                                            </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              id="search"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Search"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Name
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Website
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      City
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </thead>
                      </ForwardRef(TableHead)>
                    </WithStyles(ForwardRef(TableHead))>
                    <WithStyles(ForwardRef(TableBody))>
                      <ForwardRef(TableBody)
                        classes={
                          Object {
                            "root": "MuiTableBody-root",
                          }
                        }
                      >
                        <tbody
                          className="MuiTableBody-root"
                        >
                          <WithStyles(ForwardRef(TableRow))
                            key="43"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Chuck Jones
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                          <WithStyles(ForwardRef(TableRow))
                            key="42"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      EMCA
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Mel Blanc
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </tbody>
                      </ForwardRef(TableBody)>
                    </WithStyles(ForwardRef(TableBody))>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollableContainer>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;

exports[`Users View should render users sorted by company name descending 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "100": "#cfd8dc",
          "200": "#b0bec5",
          "300": "#90a4ae",
          "400": "#78909c",
          "50": "#eceff1",
          "500": "#607d8b",
          "600": "#546e7a",
          "700": "#455a64",
          "800": "#37474f",
          "900": "#263238",
          "A100": "#cfd8dc",
          "A200": "#b0bec5",
          "A400": "#78909c",
          "A700": "#455a64",
          "contrastText": "#fff",
          "dark": "#455a64",
          "light": "#90a4ae",
          "main": "#607d8b",
        },
        "secondary": Object {
          "100": "#dcedc8",
          "200": "#c5e1a5",
          "300": "#aed581",
          "400": "#9ccc65",
          "50": "#f1f8e9",
          "500": "#8bc34a",
          "600": "#7cb342",
          "700": "#689f38",
          "800": "#558b2f",
          "900": "#33691e",
          "A100": "#ccff90",
          "A200": "#b2ff59",
          "A400": "#76ff03",
          "A700": "#64dd17",
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#64dd17",
          "light": "#b2ff59",
          "main": "#76ff03",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "none",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Users>
          <ScrollableContainer>
            <div
              className="makeStyles-scrollable-59"
            >
              <WithStyles(ForwardRef(Table))
                className="makeStyles-table-1"
              >
                <ForwardRef(Table)
                  className="makeStyles-table-1"
                  classes={
                    Object {
                      "root": "MuiTable-root",
                    }
                  }
                >
                  <table
                    className="MuiTable-root makeStyles-table-1"
                  >
                    <WithStyles(ForwardRef(TableHead))>
                      <ForwardRef(TableHead)
                        classes={
                          Object {
                            "root": "MuiTableHead-root",
                          }
                        }
                      >
                        <thead
                          className="MuiTableHead-root"
                        >
                          <WithStyles(ForwardRef(TableRow))>
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root MuiTableRow-head"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      <div
                                        className="makeStyles-header-2"
                                      >
                                        <div
                                          className="makeStyles-headerSort-3"
                                          id="sortCompanyName"
                                          onClick={[Function]}
                                        >
                                          Company Name 
                                          <ForwardRef>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7 14l5-5 5 5z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                        </div>
                                        <WithStyles(ForwardRef(TextField))
                                          InputProps={
                                            Object {
                                              "startAdornment": <ForwardRef(WithStyles)
                                                position="start"
                                              >
                                                <Memo />
                                              </ForwardRef(WithStyles)>,
                                            }
                                          }
                                          className="makeStyles-search-4"
                                          id="search"
                                          onChange={[Function]}
                                          placeholder="Search"
                                        >
                                          <ForwardRef(TextField)
                                            InputProps={
                                              Object {
                                                "startAdornment": <ForwardRef(WithStyles)
                                                  position="start"
                                                >
                                                  <Memo />
                                                </ForwardRef(WithStyles)>,
                                              }
                                            }
                                            className="makeStyles-search-4"
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            id="search"
                                            onChange={[Function]}
                                            placeholder="Search"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root makeStyles-search-4"
                                              required={false}
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root makeStyles-search-4"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                required={false}
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root makeStyles-search-4"
                                                >
                                                  <WithStyles(ForwardRef(Input))
                                                    id="search"
                                                    onChange={[Function]}
                                                    placeholder="Search"
                                                    startAdornment={
                                                      <ForwardRef(WithStyles)
                                                        position="start"
                                                      >
                                                        <Memo />
                                                      </ForwardRef(WithStyles)>
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      id="search"
                                                      onChange={[Function]}
                                                      placeholder="Search"
                                                      startAdornment={
                                                        <ForwardRef(WithStyles)
                                                          position="start"
                                                        >
                                                          <Memo />
                                                        </ForwardRef(WithStyles)>
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        id="search"
                                                        inputComponent="input"
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        placeholder="Search"
                                                        startAdornment={
                                                          <ForwardRef(WithStyles)
                                                            position="start"
                                                          >
                                                            <Memo />
                                                          </ForwardRef(WithStyles)>
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputSelect": "MuiInputBase-inputSelect",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={false}
                                                          id="search"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Search"
                                                          startAdornment={
                                                            <ForwardRef(WithStyles)
                                                              position="start"
                                                            >
                                                              <Memo />
                                                            </ForwardRef(WithStyles)>
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))
                                                              position="start"
                                                            >
                                                              <WithFormControlContext(ForwardRef(InputAdornment))
                                                                classes={
                                                                  Object {
                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                    "filled": "MuiInputAdornment-filled",
                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                    "root": "MuiInputAdornment-root",
                                                                  }
                                                                }
                                                                position="start"
                                                              >
                                                                <ForwardRef(InputAdornment)
                                                                  classes={
                                                                    Object {
                                                                      "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                      "filled": "MuiInputAdornment-filled",
                                                                      "positionEnd": "MuiInputAdornment-positionEnd",
                                                                      "positionStart": "MuiInputAdornment-positionStart",
                                                                      "root": "MuiInputAdornment-root",
                                                                    }
                                                                  }
                                                                  muiFormControl={
                                                                    Object {
                                                                      "adornedStart": true,
                                                                      "disabled": false,
                                                                      "error": false,
                                                                      "filled": false,
                                                                      "focused": false,
                                                                      "margin": "none",
                                                                      "onBlur": [Function],
                                                                      "onEmpty": [Function],
                                                                      "onFilled": [Function],
                                                                      "onFocus": [Function],
                                                                      "required": false,
                                                                      "variant": "standard",
                                                                    }
                                                                  }
                                                                  position="start"
                                                                >
                                                                  <div
                                                                    className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            role="presentation"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ForwardRef(InputAdornment)>
                                                              </WithFormControlContext(ForwardRef(InputAdornment))>
                                                            </WithStyles(WithFormControlContext(ForwardRef(InputAdornment)))>
                                                            <input
                                                              aria-invalid={false}
                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                              disabled={false}
                                                              id="search"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder="Search"
                                                              required={false}
                                                              type="text"
                                                            />
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Name
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      Website
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <th
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-head"
                                      scope="col"
                                    >
                                      City
                                    </th>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </thead>
                      </ForwardRef(TableHead)>
                    </WithStyles(ForwardRef(TableHead))>
                    <WithStyles(ForwardRef(TableBody))>
                      <ForwardRef(TableBody)
                        classes={
                          Object {
                            "root": "MuiTableBody-root",
                          }
                        }
                      >
                        <tbody
                          className="MuiTableBody-root"
                        >
                          <WithStyles(ForwardRef(TableRow))
                            key="42"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      EMCA
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Mel Blanc
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                          <WithStyles(ForwardRef(TableRow))
                            key="43"
                          >
                            <ForwardRef(TableRow)
                              classes={
                                Object {
                                  "footer": "MuiTableRow-footer",
                                  "head": "MuiTableRow-head",
                                  "hover": "MuiTableRow-hover",
                                  "root": "MuiTableRow-root",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <tr
                                className="MuiTableRow-root"
                              >
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      Chuck Jones
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      looney-toons.org
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                                <WithStyles(ForwardRef(TableCell))>
                                  <ForwardRef(TableCell)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTableCell-alignCenter",
                                        "alignJustify": "MuiTableCell-alignJustify",
                                        "alignLeft": "MuiTableCell-alignLeft",
                                        "alignRight": "MuiTableCell-alignRight",
                                        "body": "MuiTableCell-body",
                                        "footer": "MuiTableCell-footer",
                                        "head": "MuiTableCell-head",
                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                        "paddingNone": "MuiTableCell-paddingNone",
                                        "root": "MuiTableCell-root",
                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                      }
                                    }
                                  >
                                    <td
                                      aria-sort={null}
                                      className="MuiTableCell-root MuiTableCell-body"
                                    >
                                      ACME
                                    </td>
                                  </ForwardRef(TableCell)>
                                </WithStyles(ForwardRef(TableCell))>
                              </tr>
                            </ForwardRef(TableRow)>
                          </WithStyles(ForwardRef(TableRow))>
                        </tbody>
                      </ForwardRef(TableBody)>
                    </WithStyles(ForwardRef(TableBody))>
                  </table>
                </ForwardRef(Table)>
              </WithStyles(ForwardRef(Table))>
            </div>
          </ScrollableContainer>
        </Users>
      </Router>
    </BrowserRouter>
  </Provider>
</ThemeProvider>
`;
